blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown::serve_site()
packages <- c("tidyverse", "quanteda", "tidytext")
pkgTest <- function(x)
{
if (!require(x,character.only = TRUE))
{
install.packages(x,dep=TRUE)
if(!require(x,character.only = TRUE)) stop("Package not found")
}
}
lapply(packages, pkgTest)
evtools::install_github("kbenoit/readtext")
devtools::install_github("kbenoit/readtext")
library(readtext)
library(data.table)
?install_github
devtools::install_github("kbenoit/readtext", dependencies = TRUE)
install.packages("data.table")
install.packages("data.table")
install.packages("readxl")
devtools::install_github("kbenoit/readtext", dependencies = TRUE)
library(drlib)
library(readtext)
myCorpus <- corpus(readtext("C:\\Users\\Rodrigo\\Desktop\\Discursos\\Congresso\\*.txt"))
lapply(packages, pkgTest)
myCorpus <- corpus(readtext("C:\\Users\\Rodrigo\\Desktop\\Discursos\\Congresso\\*.txt"))
summary(myCorpus)
class(summary(myCorpus)
)
sumario <- summary(myCorpus)
ggplot(sumario, aes(Sentences, Text)) +
geom_bar()
qplot(sumario$Setences, sumario$Text)
qplot(sumario$Text, sumario$Sentences)
ggplot(sumario, aes(Text, Sentences)) +
geom_bar()
ggplot(sumario, aes(Text, Sentences)) +
geom_col()
ggplot(sumario, aes(Text, Sentences)) +
geom_col() +
theme_minimal()
?geom_col
ggplot(sumario, aes(Text, Sentences)) +
geom_col() +
theme_minimal() +
geom_title("Frase")
ggplot(sumario, aes(Text, Sentences)) +
geom_col() +
theme_minimal() +
ggtitle("Frases")
ggplot(sumario, aes(Text, Tokens)) +
geom_col() +
theme_minimal() +
ggtitle("Frases")
sumario
ggplot(sumario, aes(Text, Types)) +
geom_col() +
theme_minimal() +
ggtitle("Frases")
ggplot(sumario, aes(Text, Sentences)) +
geom_col() +
theme_minimal() +
ggtitle("Frases")
ggplot(sumario, aes(Text, Tokens)) +
geom_col() +
theme_minimal() +
ggtitle("Palavras")
?reorder
summary(myCorpus) %>% reorder(Text, Sentences)
summary(myCorpus)
mmary(myCorpus) %>% reorder(Text, Sentences)
summary(myCorpus) %>% reorder(Text, Sentences)
ggplot(sumario, aes(reorder(Text, -Sentences), Sentences)) +
geom_col() +
theme_minimal() +
ggtitle("Frases")
ggplot(sumario, aes(reorder(Text, -Tokens), Tokens)) +
geom_col() +
theme_minimal() +
ggtitle("Palavras")
ggplot(sumario, aes(reorder(Text, -Tokens), Tokens)) +
geom_col() +
theme_tufte() +
ggtitle("Palavras")
library(ggthemes)
ggplot(sumario, aes(reorder(Text, -Tokens), Tokens)) +
geom_col() +
theme_tufte() +
ggtitle("Palavras")
ggplot(sumario, aes(reorder(Text, -Tokens), Tokens)) +
geom_col() +
theme_clean() +
ggtitle("Palavras")
ggplot(sumario, aes(reorder(Text, -Tokens), Tokens)) +
geom_col() +
theme_minimal() +
ggtitle("Palavras")
ggplot(sumario, aes(reorder(Text, -Sentences), Sentences)) +
geom_col() +
theme_minimal() +
ggtitle("Frases")
ggplot(sumario, aes(reorder(Text, -Tokens), Tokens)) +
geom_col() +
theme_minimal() +
ggtitle("Palavras") +
xlab("Presidentes")
ggplot(sumario, aes(reorder(Text, -Tokens), Tokens)) +
geom_col() +
theme_minimal() +
ggtitle("Palavras") +
xlab("Presidentes") +
ylab("Número de palavras")
ggplot(sumario, aes(reorder(Text, -Sentences), Sentences)) +
geom_col() +
theme_minimal() +
ggtitle("Frases") +
xlab("Discursos") +
ylab("Número de frases") +
scale_x_discrete(c("Collor", "Dilma II", "Lula II", "Lula I",
"Dilma I", "FHC I", "FHC2", "Bolsonaro"))
ggplot(sumario, aes(reorder(Text, -Sentences), Sentences)) +
geom_col() +
theme_minimal() +
ggtitle("Frases") +
xlab("Discursos") +
ylab("Número de frases") +
scale_x_discrete(c("Collor", "Dilma II", "Lula II", "Lula I",
"Dilma I", "FHC I", "FHC2", "Bolsonaro"))
ggplot(sumario, aes(reorder(Text, -Sentences), Sentences)) +
geom_col() +
theme_minimal() +
ggtitle("Frases") +
xlab("Discursos") +
ylab("Número de frases") +
scale_x_discrete(limits = c("Collor", "Dilma II", "Lula II", "Lula I",
"Dilma I", "FHC I", "FHC2", "Bolsonaro"))
ggplot(sumario, aes(reorder(Text, -Sentences), Sentences)) +
geom_col() +
theme_minimal() +
ggtitle("Frases") +
xlab("Discursos") +
ylab("Número de frases") +
scale_x_discrete(labels = c("Collor", "Dilma II", "Lula II", "Lula I",
"Dilma I", "FHC I", "FHC2", "Bolsonaro"))
ggplot(sumario, aes(reorder(Text, -Tokens), Tokens)) +
geom_col() +
theme_minimal() +
ggtitle("Palavras") +
xlab("Discursos") +
ylab("Número de palavras")
ggplot(sumario, aes(reorder(Text, -Sentences), Sentences)) +
geom_col() +
theme_minimal() +
ggtitle("Frases") +
xlab("Discursos") +
ylab("Número de frases")
ggplot(sumario, aes(reorder(Text, -Tokens), Tokens)) +
geom_col() +
theme_minimal() +
ggtitle("Palavras") +
xlab("Discursos") +
ylab("Número de palavras")
ggplot(sumario, aes(reorder(Text, -Tokens), Tokens)) +
geom_col() +
theme_minimal() +
ggtitle("Palavras") +
xlab("Discursos") +
ylab("Número de palavras") +
scale_x_discrete(labels = c("Collor", "Dilma II", "Lula II", "Lula I",
"Dilma I", "FHC I", "FHC II", "Bolsonaro"))
ggplot(sumario, aes(reorder(Text, -Tokens), Tokens)) +
geom_col() +
theme_minimal() +
ggtitle("Palavras") +
xlab("Discursos") +
ylab("Número de palavras") +
scale_x_discrete(labels = c("Collor", "Dilma II", "Lula II", "Lula I",
"Dilma I", "FHC I", "FHC II", "Bolsonaro")) +
theme(plot.title = element_text(hjust = 0.5))
ggarrange(palavras, frases, ncol = 2)
library(ggpubr)
ggarrange(palavras, frases, ncol = 2)
palavras <- ggplot(sumario, aes(reorder(Text, -Tokens), Tokens)) +
geom_col() +
theme_minimal() +
ggtitle("Palavras") +
xlab("Discursos") +
ylab("Número de palavras") +
scale_x_discrete(labels = c("Collor", "Dilma II", "Lula II", "Lula I",
"Dilma I", "FHC I", "FHC II", "Bolsonaro")) +
theme(plot.title = element_text(hjust = 0.5))
frases <- ggplot(sumario, aes(reorder(Text, -Sentences), Sentences)) +
geom_col() +
theme_minimal() +
ggtitle("Frases") +
xlab("Discursos") +
ylab("Número de frases") +
scale_x_discrete(labels = c("Collor", "Lula II", "Dilma II", "FHC II",
"Dilma I", "FHC I", "Lula I", "Bolsonaro")) +
theme(plot.title = element_text(hjust = 0.5))
ggarrange(palavras, frases, ncol = 2)
?ggarrange
blogdown::serve_site()
packages <- c("tidyverse", "quanteda", "tidytext", "ggthemes", "ggpubr", "captioner")
pkgTest <- function(x)
{
if (!require(x,character.only = TRUE))
{
install.packages(x,dep=TRUE)
if(!require(x,character.only = TRUE)) stop("Package not found")
}
}
lapply(packages, pkgTest)
library(captioner)
figs <- captioner(prefix="Figura")
figura1_cap <- fig_nums(name = "figura1_cap", "Tamanho dos discursos")
library(captioner)
figure_nums <- captioner::captioner(prefix = "Figura ")
blogdown::serve_site()
blogdown::server_site()
blogdown::server_site()
blogdown::server_site()
figura1 <- ggarrange(palavras, frases, ncol = 2)
annotate_figure(figura1,
top = text_grob("Figura 1 - Tamanho dos discursos", color = "black", face = "bold", size = 14))
annotate_figure(figura1,
top = text_grob("Figura 1 - Tamanho dos discursos", color = "black", face = "italic", size = 14))
blogdown::server_site()
sumario
class(figura1)
library(plotly)
install.packages("plotly")
library(plotly)
ggplotly(figura1)
ggplotly(frases)
?ggplotly
ggplotly(frases, tooltip = "Frases")
ggplotly(frases, tooltip = "Sentences")
plotly_frases <- ggplotly(frases)
plotly_frases
plotly_frases$text
plotly_frases[text]
plotly_frases$x$data$text
plotly_frases$x
plotly_frases <- ggplotly(frases, tooltip = "Sentences")
plotly_frases
plotly_frases$x$data$text
plotly_frases$x$data
plotly_frases$x$data$text
plotly_frases$x$data[text]
plotly_frases$x$data[[text]]
class(plotly_frases$x$data
)
type(plotly_frases$x$data
)
plotly_frases$x$data[1]
plotly_frases$x$data[1]$text
plotly_frases$x$data[1][6]
plotly_frases$x$data[1]
plotly_frases$x$data[1]$text
plotly_frases$x$data[[1]]$text
plotly_frases$x$data[[1]]$text %>% gsub("Sentences", "Frases")
?gsub
plotly_frases$x$data[[1]]$text %>% gsub("Sentences", "Frases", .)
plotly_frases$x$data[[1]]$text <- plotly_frases$x$data[[1]]$text %>%
gsub("Sentences", "Frases", .)
plotly_frases
plotly_palavras <- ggplotly(palavras, tooltip = "Tokens")
plotly_palavras
plotly_palavras$x$data[[1]]$text <- plotly_frases$x$data[[1]]$text %>%
gsub("Tokens", "Palavras", .)
subplot(plotly_palavras, plotly_frases)
plotly_palavras
plotly_frases
subplot(plotly_palavras, plotly_frases)
?subplot
subplot(plotly_palavras, plotly_frases, titleX = T, titleY = T)
subplot(plotly_palavras, plotly_frases, titleX = T, titleY = T)
subplot(plotly_palavras, plotly_frases, titleX = "Palavras", titleY = "Frases")
subplot(plotly_palavras, plotly_frases, titleX = F)
subplot(plotly_palavras, plotly_frases, titleX = F, titleY = F)
subplot(plotly_palavras, plotly_frases, titleX = F, titleY = T)
subplot(plotly_palavras, plotly_frases, titleX = T, titleY = F)
plotly_frases
plotly_palavras
subplot(plotly_palavras, plotly_frases, titleX = F, titleY = F)
subplot(plotly_palavras, plotly_frases, titleX = T, titleY = T)
install.packages("GGally")
library(GGally)
ggmatrix(list(palavras, frases))
ggmatrix(list(palavras, frases), 1)
ggmatrix(list(palavras, frases), 1, 2)
palavras
?ggmatrix
ggmatrix(list(palavras, frases), 1, 2, title = "Figura 1 - Extensão dos discursos")
ggmatrix(list(palavras, frases), 1, 2, title = "Figura 1 - Extensão dos discursos") +
theme(plot.title = element_text(hjust = 0.5))
strip
ggmatrix(list(palavras, frases), 1, 2, title = "Figura 1 - Extensão dos discursos") +
theme(plot.title = element_text(hjust = 0.5))
ggmatrix(list(palavras, frases), 1, 2, title = "Figura 1 - Extensão dos discursos", showAxisPlotLabels = T)
ggmatrix(list(palavras, frases), 1, 2, title = "Figura 1 - Extensão dos discursos", showAxisPlotLabels = T)
ggmatrix(list(palavras, frases), 1, 2, title = "Figura 1 - Extensão dos discursos", xAxisLabels = T, yAxisLabels = T)
ggmatrix(list(palavras, frases), 1, 2, title = "Figura 1 - Extensão dos discursos", xAxisLabels = T)
ggmatrix(list(palavras, frases), 1, 2, title = "Figura 1 - Extensão dos discursos", xAxisLabels = c("Palavras", "Frases"))
ggmatrix(list(palavras, frases), 1, 2, title = "Figura 1 - Extensão dos discursos", xAxisLabels = c("Palavras", "Frases")) +
theme(plot.title = element_text(hjust = 0.5))
subplot(plotly_palavras, plotly_frases, titleX = T, titleY = T)
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
ggplotly(frases, tooltip = "Sentences")
plotly_frases <- ggplotly(frases, tooltip = "Sentences")
plotly_frases$x$data[[1]]$text <- plotly_frases$x$data[[1]]$text %>%
gsub("Sentences", "Frases", .)
subplot(plotly_palavras, plotly_frases, titleX = T, titleY = T)
subplot(plotly_palavras, plotly_frases, titleX = F, titleY = F)
plotly_palavras <- ggplotly(palavras, tooltip = "Tokens")
plotly_palavras$x$data[[1]]$text <- plotly_palavras$x$data[[1]]$text %>%
gsub("Tokens", "Palavras", .)
subplot(plotly_palavras, plotly_frases, titleX = F, titleY = F)
blogdown::serve_site()
subplot(plotly_palavras, plotly_frases, titleX = F, titleY = F) %>%
layout(title = "Extensão dos discursos")
subplot(plotly_palavras, plotly_frases) %>%
layout(title = "Extensão dos discursos em número de palavras e frases")
figura1_plotly <- subplot(plotly_palavras, plotly_frases) %>%
layout(title = "Extensão dos discursos em número de palavras e frases")
summary(figura1_plotly)
summary(figura1_plotly$x)
summary(figura1_plotly$x$layout)
summary(figura1_plotly$x$layout$title  )
summary(figura1_plotly$x$layout$annotations)
summary(figura1_plotly$x$layout$title)
summary(figura1_plotly$x$layout$title$text)
figura1_plotly$x$layout$title$text
figura1_plotly$x$layout$title$x
figura1_plotly$x$layout$title$xref
